---
import RecommendationCard from "../../components/recomendaciones/RecommendationCard.astro";
import { actions } from "astro:actions";
import BaseLayout from "../../layouts/baseLayout.astro";
import type { iRecomendacion } from "../../lib/interfaces/recomendacion";

let categorias: any[] = [];
const { data: a_categorias, error: errorGettingCategorias } =
  await Astro.callAction(actions.categorias.getCategorias, {});
if (!errorGettingCategorias) {
  categorias = a_categorias.data;
}
let recomendaciones: iRecomendacion[] = [];
let { data: a_recomendaciones, error: errorGettingRecomendaciones } =
  await Astro.callAction(actions.recomendaciones.getRecomendaciones, {});
if (a_recomendaciones) {
  if (!errorGettingRecomendaciones) {
    recomendaciones = a_recomendaciones.recomendaciones;
  }
}

if (Astro.request.method === "POST") {
  const form = await Astro.request.formData();
  console.log(form);

  const { data, error } = await Astro.callAction(
    actions.recomendaciones.filtrarRecomendaciones,
    form
  );

  if (!error) {
    recomendaciones = data.recomendaciones;
  }
}
---

<BaseLayout>
  <div class="flex flex-col gap-10 font-secondary">
    <div class="flex flex-col gap-5">
      <h1
        class="font-primary text-5xl sm:text-6xl lg:text-7xl xl:text-8xl font-black"
      >
        Recomendaciones
      </h1>
      <p class="font-secondary text-base lg:text-lg xl:text-3xl font-normal">
        Aquí comparto recomendaciones de series, películas y libros que me han
        atrapado últimamente. Son mis favoritos, los que me han hecho reír,
        reflexionar o simplemente desconectar. Espero que encuentres algo que te
        guste tanto como a mí…
      </p>
    </div>
    <div class="flex flex-col gap-5">
      <h2
        class="font-primary text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-light"
      >
        Categorías
      </h2>
      <div class="flex flex-row flex-wrap gap-5">
        <form method="POST">
          <input type="hidden" value="all" />
          <button
            class="option px-8 py-4 font-semibold rounded-2xl hover:outline hover:outline-neutral-300 hover:bg-white bg-neutral-200 text-black"
            type="submit">Todos</button
          >
        </form>
        {
          categorias.map((c) => (
            <form method="POST">
              <input type="hidden" value={c.id} name="category" />
              <button
                class="option px-8 py-4 font-semibold rounded-2xl hover:outline hover:outline-neutral-300 hover:bg-white bg-neutral-200 text-black"
                type="submit"
              >
                {c.nombre}
              </button>
            </form>
          ))
        }
      </div>
    </div>
    <section class="grid grid-cols-1 md:grid-cols-2 gap-5">
      {
        recomendaciones.length === 0 ? (
          <div class="col-span-full flex justify-center">
            <h3 class="font-extrabold text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl">
              No hay recomendaciones disponibles.
            </h3>
          </div>
        ) : (
          recomendaciones.map((recomendacion: iRecomendacion) => (
            <RecommendationCard {recomendacion} />
          ))
        )
      }
    </section>
  </div>
</BaseLayout>
<style is:inline>
  button {
    cursor: pointer;
  }
  .option {
    font-weight: var(--font-weight-bold);
    text-transform: capitalize;
  }
</style>
